name: Build and Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x86_64, aarch64]
        exclude:
          - os: windows-latest
            arch: aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Qt (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.4.0'
        host: 'linux'
        target: 'desktop'
        arch: ${{ matrix.arch }}
        dir: "$HOME/Qt/6.4.0"

    - name: Set up Qt (Windows)
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.4.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: "$env:QT_DIR"

    - name: Build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir build
        cd build
        cmake -G "Unix Makefiles" -DCMAKE_PREFIX_PATH=$HOME/Qt/6.4.0/$QT_HOST_ARCH ..
        make
      env:
        QT_HOST_ARCH: ${{ matrix.arch == 'x86_64' && 'gcc_64' || 'gcc_arm64' }}

    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir build
        cd build
        cmake -G "NMake Makefiles" -DCMAKE_PREFIX_PATH=$env:QT_DIR/6.4.0/msvc2019_64 ..
        nmake

    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        cpack -G ZIP
      env:
        PATH: $env:QT_DIR/6.4.0/msvc2019_64/bin;$PATH

    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/*.zip
